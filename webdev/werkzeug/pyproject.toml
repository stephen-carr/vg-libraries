[project]
name = "Werkzeug"
version = "3.2.0.dev"
description = "The comprehensive WSGI web application library."
readme = "README.md"
license = {file = "LICENSE.txt"}
maintainers = [{name = "Pallets", email = "contact@palletsprojects.com"}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Internet :: WWW/HTTP :: WSGI",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
    "MarkupSafe>=2.1.1",
]

[project.urls]
Donate = "https://palletsprojects.com/donate"
Documentation = "https://werkzeug.palletsprojects.com/"
Changes = "https://werkzeug.palletsprojects.com/changes/"
"Source Code" = "https://github.com/pallets/werkzeug/"
"Issue Tracker" = "https://github.com/pallets/werkzeug/issues/"
Chat = "https://discord.gg/pallets"

[project.optional-dependencies]
watchdog = ["watchdog>=2.3"]

[build-system]
requires = ["flit_core<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "werkzeug"

[tool.flit.sdist]
include = [
    "docs/",
    "examples/",
    "requirements/",
    "tests/",
    "CHANGES.rst",
    "tox.ini",
]
exclude = [
    "docs/_build/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "error",
]
markers = ["dev_server: tests that start the dev server"]

[tool.coverage.run]
branch = true
source = ["werkzeug", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.mypy]
python_version = "3.9"
files = ["src/werkzeug"]
show_error_codes = true
pretty = true
strict = true

[[tool.mypy.overrides]]
module = [
    "colorama.*",
    "cryptography.*",
    "ephemeral_port_reserve",
    "watchdog.*",
    "xprocess.*",
]
ignore_missing_imports = true

[tool.pyright]
pythonVersion = "3.9"
include = ["src/werkzeug"]

[tool.ruff]
extend-exclude = ["examples/"]
src = ["src"]
fix = true
show-fixes = true
output-format = "full"

[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "E",  # pycodestyle error
    "F",  # pyflakes
    "I",  # isort
    "UP",  # pyupgrade
    "W",  # pycodestyle warning
]
ignore = [
    "E402",  # allow circular imports at end of file
]

[tool.ruff.lint.isort]
force-single-line = true
order-by-type = false

[tool.gha-update]
tag-only = [
    "slsa-framework/slsa-github-generator",
]
